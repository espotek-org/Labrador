#!/bin/bash

HERE="$(dirname "$(readlink -f "${0}")")"
cd "$(dirname "$0")"

cxxpre=""
gccpre=""
execpre=""
libc6arch="libc6,x86-64"
exec="./bin/$(sed -n 's|^Exec=||p' $(ls -1 *.desktop))"

if [ -n "$APPIMAGE" ] && [ "$(file -b "$APPIMAGE" | cut -d, -f2)" != " x86-64" ]; then
  libc6arch="libc6"
fi

cd "usr"

if [ -e "./optional/libstdc++/libstdc++.so.6" ]; then
  lib="$(PATH="/sbin:$PATH" ldconfig -p | grep "libstdc++\.so\.6 ($libc6arch)" | awk 'NR==1{print $NF}')"
  sym_sys=$(tr '\0' '\n' < "$lib" | grep -e '^GLIBCXX_3\.4' | tail -n1)
  sym_app=$(tr '\0' '\n' < "./optional/libstdc++/libstdc++.so.6" | grep -e '^GLIBCXX_3\.4' | tail -n1)
  if [ "$(printf "${sym_sys}\n${sym_app}"| sort -V | tail -1)" != "$sym_sys" ]; then
    cxxpath="./optional/libstdc++:"
  fi
fi

if [ -e "./optional/libgcc/libgcc_s.so.1" ]; then
  lib="$(PATH="/sbin:$PATH" ldconfig -p | grep "libgcc_s\.so\.1 ($libc6arch)" | awk 'NR==1{print $NF}')"
  sym_sys=$(tr '\0' '\n' < "$lib" | grep -e '^GCC_[0-9]\\.[0-9]' | tail -n1)
  sym_app=$(tr '\0' '\n' < "./optional/libgcc/libgcc_s.so.1" | grep -e '^GCC_[0-9]\\.[0-9]' | tail -n1)
  if [ "$(printf "${sym_sys}\n${sym_app}"| sort -V | tail -1)" != "$sym_sys" ]; then
    gccpath="./optional/libgcc:"
  fi
fi

if [ -n "$cxxpath" ] || [ -n "$gccpath" ]; then
  if [ -e "./optional/exec.so" ]; then
    execpre=""
    export LD_PRELOAD="./optional/exec.so:${LD_PRELOAD}"
  fi
  export LD_LIBRARY_PATH="${cxxpath}${gccpath}${LD_LIBRARY_PATH}"
fi

HELPER=$(mktemp "/tmp/labrador-udev-helperXXXXXX")
RULES="69-labrador.rules"
if [ ! -f "/etc/udev/rules.d/$RULES" ] \
&& [ ! -f "/run/udev/rules.d/$RULES" ] \
&& [ ! -f "/lib/udev/rules.d/$RULES" ] \
&& [ -f "$HERE/lib/udev/rules.d/$RULES" ]; then
  cat > "$HELPER" <<EOHelper
#!/bin/sh
set -e
mkdir -p /run/udev/rules.d
cat > /run/udev/rules.d/$RULES <<\EORules
$(<"$HERE/lib/udev/rules.d/$RULES")
EORules
udevadm control --reload-rules && udevadm trigger --subsystem-match=usb
EOHelper
  chmod u+x "$HELPER"

  echo "Installing udev rules to /run/udev/rules.d/$RULES"
  sudo true && sudo "$HELPER"
  sudo true || pkexec --disable-internal-agent "$HELPER" || true

  rm "$HELPER"
fi

export XDG_DATA_DIRS="$HERE/usr/share:${XDG_DATA_DIRS:-/usr/local/share:/usr/share}"

exec "$HERE/usr/bin/Labrador" "$@"
