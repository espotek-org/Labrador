name: Build Windows

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-2019
    strategy:
      fail-fast: true
      matrix:
        include:
          - QT_ARCH: 'win64_msvc2019_64'
            PLATFORM: 'x64'
            PLATFORM_ALT_NAME: 'amd64'
            OUTPUT_BIN_DIR: 'bin64'
          - QT_ARCH: 'win32_msvc2019'
            PLATFORM: 'x86'
            PLATFORM_ALT_NAME: 'x86'
            OUTPUT_BIN_DIR: 'bin32'

    permissions:
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install eigen
        shell: cmd
        run: |
          choco install eigen

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          arch: '${{ matrix.QT_ARCH }}'

      - name: Setup MSVC Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.PLATFORM }}

      - name: Build Labrador
        working-directory: Desktop_Interface
        shell: cmd
        run: |
          qmake CONFIG+=release INCLUDEPATH+="C:\ProgramData\chocolatey\lib\eigen\include\eigen3"
          nmake

      - name: Gather dependencies
        working-directory: Desktop_Interface
        shell: cmd
        run: |
          windeployqt bin\Labrador.exe
          xcopy /i /s /y "build_win\fftw\${{ matrix.PLATFORM }}"\libfftw3-3.dll bin
          xcopy /i /s /y "build_win\libusbk\bin\dll\${{ matrix.PLATFORM_ALT_NAME }}"\libusbK.dll bin

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.OUTPUT_BIN_DIR }}
          path: Desktop_Interface/bin

  build-installer:
    needs:
      - build-windows
    runs-on: windows-2019
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Download additional files
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "http://espotek.com/ai157.msi" -OutFile "ai157.msi"
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref }}/Desktop_Interface/build_win/Labrador.aip" -OutFile "Labrador.aip"
          mkdir "driver"
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref }}/Desktop_Interface/build_win/driver/Bootloader_Install.exe" -OutFile "driver/Bootloader_Install.exe"
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref }}/Desktop_Interface/build_win/driver/Driver_Install.exe" -OutFile "driver/Driver_Install.exe"
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref }}/Desktop_Interface/build_win/driver/Gobindar_Install.exe" -OutFile "driver/Gobindar_Install.exe"
          mkdir "Prerequisites/Visual C++ Redistributable for Visual Studio 2017"
          # XXX: Replacing these installers with the 2019 versions and hoping Advanced Installer handles them properly
          #Invoke-WebRequest -Uri "http://download.visualstudio.microsoft.com/download/pr/9fbed7c7-7012-4cc0-a0a3-a541f51981b5/e7eec15278b4473e26d7e32cef53a34c/vc_redist.x64.exe" -OutFile "Prerequisites/Visual C++ Redistributable for Visual Studio 2017/vc_redist.x64.exe"
          #Invoke-WebRequest -Uri "http://download.visualstudio.microsoft.com/download/pr/d0b808a8-aa78-4250-8e54-49b8c23f7328/9c5e6532055786367ee61aafb3313c95/vc_redist.x86.exe" -OutFile "Prerequisites/Visual C++ Redistributable for Visual Studio 2017/vc_redist.x86.exe"
          mv "bin64/vc_redist.x64.exe" "Prerequisites/Visual C++ Redistributable for Visual Studio 2017"
          mv "bin32/vc_redist.x86.exe" "Prerequisites/Visual C++ Redistributable for Visual Studio 2017"

      - name: Install Advanced Installer
        shell: cmd
        run: |
          msiexec /i ai157.msi /qn
          rm ai157.msi

      - name: Register Advanced Installer
        env:
          AI_KEY: ${{ secrets.AI_KEY }}
        if: env.AI_KEY != ''
        shell: cmd
        run: |
          "C:/Program Files (x86)/Caphyon/Advanced Installer 15.7/bin/x86/AdvancedInstaller.com" /register %AI_KEY%

      - name: Build installer
        shell: cmd
        run: |
          "C:/Program Files (x86)/Caphyon/Advanced Installer 15.7/bin/x86/AdvancedInstaller.com" /rebuild Labrador.aip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: exe
          path: Labrador-SetupFiles/Labrador_Installer.exe
          compression-level: 0
          if-no-files-found: error
